// @generated by protobuf-ts 2.11.1 with parameter server_grpc1
// @generated from protobuf file "a2a.proto" (package "a2a.v1", syntax proto3)
// tslint:disable
import { Empty } from "./google/protobuf/empty";
import { DeleteTaskPushNotificationConfigRequest } from "./a2a";
import { AgentCard } from "./a2a";
import { GetAgentCardRequest } from "./a2a";
import { ListTaskPushNotificationConfigResponse } from "./a2a";
import { ListTaskPushNotificationConfigRequest } from "./a2a";
import { GetTaskPushNotificationConfigRequest } from "./a2a";
import { TaskPushNotificationConfig } from "./a2a";
import { CreateTaskPushNotificationConfigRequest } from "./a2a";
import { TaskSubscriptionRequest } from "./a2a";
import { CancelTaskRequest } from "./a2a";
import { Task } from "./a2a";
import { GetTaskRequest } from "./a2a";
import { StreamResponse } from "./a2a";
import { SendMessageResponse } from "./a2a";
import { SendMessageRequest } from "./a2a";
import type * as grpc from "@grpc/grpc-js";
/**
 * A2AService defines the gRPC version of the A2A protocol. This has a slightly
 * different shape than the JSONRPC version to better conform to AIP-127,
 * where appropriate. The nouns are AgentCard, Message, Task and
 * TaskPushNotificationConfig.
 * - Messages are not a standard resource so there is no get/delete/update/list
 *   interface, only a send and stream custom methods.
 * - Tasks have a get interface and custom cancel and subscribe methods.
 * - TaskPushNotificationConfig are a resource whose parent is a task.
 *   They have get, list and create methods.
 * - AgentCard is a static resource with only a get method.
 * fields are not present as they don't comply with AIP rules, and the
 * optional history_length on the get task method is not present as it also
 * violates AIP-127 and AIP-131.
 *
 * @generated from protobuf service a2a.v1.A2AService
 */
export interface IA2AService extends grpc.UntypedServiceImplementation {
    /**
     * Send a message to the agent. This is a blocking call that will return the
     * task once it is completed, or a LRO if requested.
     *
     * @generated from protobuf rpc: SendMessage
     */
    sendMessage: grpc.handleUnaryCall<SendMessageRequest, SendMessageResponse>;
    /**
     * SendStreamingMessage is a streaming call that will return a stream of
     * task update events until the Task is in an interrupted or terminal state.
     *
     * @generated from protobuf rpc: SendStreamingMessage
     */
    sendStreamingMessage: grpc.handleServerStreamingCall<SendMessageRequest, StreamResponse>;
    /**
     * Get the current state of a task from the agent.
     *
     * @generated from protobuf rpc: GetTask
     */
    getTask: grpc.handleUnaryCall<GetTaskRequest, Task>;
    /**
     * Cancel a task from the agent. If supported one should expect no
     * more task updates for the task.
     *
     * @generated from protobuf rpc: CancelTask
     */
    cancelTask: grpc.handleUnaryCall<CancelTaskRequest, Task>;
    /**
     * TaskSubscription is a streaming call that will return a stream of task
     * update events. This attaches the stream to an existing in process task.
     * If the task is complete the stream will return the completed task (like
     * GetTask) and close the stream.
     *
     * @generated from protobuf rpc: TaskSubscription
     */
    taskSubscription: grpc.handleServerStreamingCall<TaskSubscriptionRequest, StreamResponse>;
    /**
     * Set a push notification config for a task.
     *
     * @generated from protobuf rpc: CreateTaskPushNotificationConfig
     */
    createTaskPushNotificationConfig: grpc.handleUnaryCall<CreateTaskPushNotificationConfigRequest, TaskPushNotificationConfig>;
    /**
     * Get a push notification config for a task.
     *
     * @generated from protobuf rpc: GetTaskPushNotificationConfig
     */
    getTaskPushNotificationConfig: grpc.handleUnaryCall<GetTaskPushNotificationConfigRequest, TaskPushNotificationConfig>;
    /**
     * Get a list of push notifications configured for a task.
     *
     * @generated from protobuf rpc: ListTaskPushNotificationConfig
     */
    listTaskPushNotificationConfig: grpc.handleUnaryCall<ListTaskPushNotificationConfigRequest, ListTaskPushNotificationConfigResponse>;
    /**
     * GetAgentCard returns the agent card for the agent.
     *
     * @generated from protobuf rpc: GetAgentCard
     */
    getAgentCard: grpc.handleUnaryCall<GetAgentCardRequest, AgentCard>;
    /**
     * Delete a push notification config for a task.
     *
     * @generated from protobuf rpc: DeleteTaskPushNotificationConfig
     */
    deleteTaskPushNotificationConfig: grpc.handleUnaryCall<DeleteTaskPushNotificationConfigRequest, Empty>;
}
/**
 * @grpc/grpc-js definition for the protobuf service a2a.v1.A2AService.
 *
 * Usage: Implement the interface IA2AService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IA2AService = ...
 * server.addService(a2AServiceDefinition, service);
 * ```
 */
export const a2AServiceDefinition: grpc.ServiceDefinition<IA2AService> = {
    sendMessage: {
        path: "/a2a.v1.A2AService/SendMessage",
        originalName: "SendMessage",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => SendMessageResponse.fromBinary(bytes),
        requestDeserialize: bytes => SendMessageRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(SendMessageResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(SendMessageRequest.toBinary(value))
    },
    sendStreamingMessage: {
        path: "/a2a.v1.A2AService/SendStreamingMessage",
        originalName: "SendStreamingMessage",
        requestStream: false,
        responseStream: true,
        responseDeserialize: bytes => StreamResponse.fromBinary(bytes),
        requestDeserialize: bytes => SendMessageRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(StreamResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(SendMessageRequest.toBinary(value))
    },
    getTask: {
        path: "/a2a.v1.A2AService/GetTask",
        originalName: "GetTask",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => Task.fromBinary(bytes),
        requestDeserialize: bytes => GetTaskRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(Task.toBinary(value)),
        requestSerialize: value => Buffer.from(GetTaskRequest.toBinary(value))
    },
    cancelTask: {
        path: "/a2a.v1.A2AService/CancelTask",
        originalName: "CancelTask",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => Task.fromBinary(bytes),
        requestDeserialize: bytes => CancelTaskRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(Task.toBinary(value)),
        requestSerialize: value => Buffer.from(CancelTaskRequest.toBinary(value))
    },
    taskSubscription: {
        path: "/a2a.v1.A2AService/TaskSubscription",
        originalName: "TaskSubscription",
        requestStream: false,
        responseStream: true,
        responseDeserialize: bytes => StreamResponse.fromBinary(bytes),
        requestDeserialize: bytes => TaskSubscriptionRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(StreamResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(TaskSubscriptionRequest.toBinary(value))
    },
    createTaskPushNotificationConfig: {
        path: "/a2a.v1.A2AService/CreateTaskPushNotificationConfig",
        originalName: "CreateTaskPushNotificationConfig",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => TaskPushNotificationConfig.fromBinary(bytes),
        requestDeserialize: bytes => CreateTaskPushNotificationConfigRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(TaskPushNotificationConfig.toBinary(value)),
        requestSerialize: value => Buffer.from(CreateTaskPushNotificationConfigRequest.toBinary(value))
    },
    getTaskPushNotificationConfig: {
        path: "/a2a.v1.A2AService/GetTaskPushNotificationConfig",
        originalName: "GetTaskPushNotificationConfig",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => TaskPushNotificationConfig.fromBinary(bytes),
        requestDeserialize: bytes => GetTaskPushNotificationConfigRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(TaskPushNotificationConfig.toBinary(value)),
        requestSerialize: value => Buffer.from(GetTaskPushNotificationConfigRequest.toBinary(value))
    },
    listTaskPushNotificationConfig: {
        path: "/a2a.v1.A2AService/ListTaskPushNotificationConfig",
        originalName: "ListTaskPushNotificationConfig",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => ListTaskPushNotificationConfigResponse.fromBinary(bytes),
        requestDeserialize: bytes => ListTaskPushNotificationConfigRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(ListTaskPushNotificationConfigResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(ListTaskPushNotificationConfigRequest.toBinary(value))
    },
    getAgentCard: {
        path: "/a2a.v1.A2AService/GetAgentCard",
        originalName: "GetAgentCard",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => AgentCard.fromBinary(bytes),
        requestDeserialize: bytes => GetAgentCardRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(AgentCard.toBinary(value)),
        requestSerialize: value => Buffer.from(GetAgentCardRequest.toBinary(value))
    },
    deleteTaskPushNotificationConfig: {
        path: "/a2a.v1.A2AService/DeleteTaskPushNotificationConfig",
        originalName: "DeleteTaskPushNotificationConfig",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => Empty.fromBinary(bytes),
        requestDeserialize: bytes => DeleteTaskPushNotificationConfigRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(Empty.toBinary(value)),
        requestSerialize: value => Buffer.from(DeleteTaskPushNotificationConfigRequest.toBinary(value))
    }
};
