// @generated by protobuf-ts 2.11.1 with parameter server_grpc1
// @generated from protobuf file "agent_executor.proto" (package "agent_executor_proxy", syntax proto3)
// tslint:disable
import { StreamResponse } from "./a2a";
import { AgentExecutorRequest } from "./agent_executor";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service agent_executor_proxy.AgentExecutor
 */
export interface IAgentExecutor extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: Execute
     */
    execute: grpc.handleServerStreamingCall<AgentExecutorRequest, StreamResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service agent_executor_proxy.AgentExecutor.
 *
 * Usage: Implement the interface IAgentExecutor and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IAgentExecutor = ...
 * server.addService(agentExecutorDefinition, service);
 * ```
 */
export const agentExecutorDefinition: grpc.ServiceDefinition<IAgentExecutor> = {
    execute: {
        path: "/agent_executor_proxy.AgentExecutor/Execute",
        originalName: "Execute",
        requestStream: false,
        responseStream: true,
        responseDeserialize: bytes => StreamResponse.fromBinary(bytes),
        requestDeserialize: bytes => AgentExecutorRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(StreamResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(AgentExecutorRequest.toBinary(value))
    }
};
